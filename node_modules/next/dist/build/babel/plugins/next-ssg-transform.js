"use strict";exports.__esModule=true;exports.default=nextTransformSsg;exports.EXPORT_NAME_GET_SERVER_PROPS=exports.EXPORT_NAME_GET_STATIC_PATHS=exports.EXPORT_NAME_GET_STATIC_PROPS=void 0;var _constants=require("../../../lib/constants");const pageComponentVar='__NEXT_COMP';const prerenderId='__N_SSG';const serverPropsId='__N_SSP';const EXPORT_NAME_GET_STATIC_PROPS='unstable_getStaticProps';exports.EXPORT_NAME_GET_STATIC_PROPS=EXPORT_NAME_GET_STATIC_PROPS;const EXPORT_NAME_GET_STATIC_PATHS='unstable_getStaticPaths';exports.EXPORT_NAME_GET_STATIC_PATHS=EXPORT_NAME_GET_STATIC_PATHS;const EXPORT_NAME_GET_SERVER_PROPS='unstable_getServerProps';exports.EXPORT_NAME_GET_SERVER_PROPS=EXPORT_NAME_GET_SERVER_PROPS;const ssgExports=new Set([EXPORT_NAME_GET_STATIC_PROPS,EXPORT_NAME_GET_STATIC_PATHS,EXPORT_NAME_GET_SERVER_PROPS]);function decorateSsgExport(t,path,state){path.traverse({ExportDefaultDeclaration(path){if(state.done){return;}state.done=true;const prev=path.node.declaration;if(prev.type.endsWith('Declaration')){prev.type=prev.type.replace(/Declaration$/,'Expression');}// @ts-ignore invalid return type
const[pageCompPath]=path.replaceWithMultiple([t.variableDeclaration('const',[t.variableDeclarator(t.identifier(pageComponentVar),prev)]),t.assignmentExpression('=',t.memberExpression(t.identifier(pageComponentVar),t.identifier(state.isPrerender?prerenderId:serverPropsId)),t.booleanLiteral(true)),t.exportDefaultDeclaration(t.identifier(pageComponentVar))]);path.scope.registerDeclaration(pageCompPath);},ExportNamedDeclaration(path){if(state.done){return;}// Look for a `export { _ as default }` specifier
const defaultSpecifier=path.node.specifiers.find(s=>{return s.exported.name==='default';});if(!defaultSpecifier){return;}state.done=true;path.replaceWithMultiple([t.assignmentExpression('=',t.memberExpression(t.identifier(defaultSpecifier.local.name),t.identifier(state.isPrerender?prerenderId:serverPropsId)),t.booleanLiteral(true)),path.node]);}});}const isDataIdentifier=(name,state)=>{if(ssgExports.has(name)){if(name===EXPORT_NAME_GET_SERVER_PROPS){if(state.isPrerender){throw new Error(_constants.SERVER_PROPS_SSG_CONFLICT);}state.isServerProps=true;}else{if(state.isServerProps){throw new Error(_constants.SERVER_PROPS_SSG_CONFLICT);}state.isPrerender=true;}return true;}return false;};function nextTransformSsg({types:t}){function getIdentifier(path){const parentPath=path.parentPath;if(parentPath.type==='VariableDeclarator'){const pp=parentPath;const name=pp.get('id');return name.node.type==='Identifier'?name:null;}if(parentPath.type==='AssignmentExpression'){const pp=parentPath;const name=pp.get('left');return name.node.type==='Identifier'?name:null;}if(path.node.type==='ArrowFunctionExpression'){return null;}return path.node.id&&path.node.id.type==='Identifier'?path.get('id'):null;}function isIdentifierReferenced(ident){const b=ident.scope.getBinding(ident.node.name);return b!=null&&b.referenced;}function markFunction(path,state){const ident=getIdentifier(path);if((ident===null||ident===void 0?void 0:ident.node)&&isIdentifierReferenced(ident)){state.refs.add(ident);}}function markImport(path,state){const local=path.get('local');if(isIdentifierReferenced(local)){state.refs.add(local);}}return{visitor:{Program:{enter(_,state){state.refs=new Set();state.isPrerender=false;state.isServerProps=false;state.done=false;},exit(path,state){if(!state.isPrerender&&!state.isServerProps){return;}const refs=state.refs;let count;function sweepFunction(path){const ident=getIdentifier(path);if((ident===null||ident===void 0?void 0:ident.node)&&refs.has(ident)&&!isIdentifierReferenced(ident)){++count;if(t.isAssignmentExpression(path.parentPath)||t.isVariableDeclarator(path.parentPath)){path.parentPath.remove();}else{path.remove();}}}function sweepImport(path){const local=path.get('local');if(refs.has(local)&&!isIdentifierReferenced(local)){++count;path.remove();if(path.parent.specifiers.length===0){path.parentPath.remove();}}}do{;path.scope.crawl();count=0;path.traverse({// eslint-disable-next-line no-loop-func
VariableDeclarator(path){if(path.node.id.type!=='Identifier'){return;}const local=path.get('id');if(refs.has(local)&&!isIdentifierReferenced(local)){++count;path.remove();}},FunctionDeclaration:sweepFunction,FunctionExpression:sweepFunction,ArrowFunctionExpression:sweepFunction,ImportSpecifier:sweepImport,ImportDefaultSpecifier:sweepImport,ImportNamespaceSpecifier:sweepImport});}while(count);decorateSsgExport(t,path,state);}},VariableDeclarator(path,state){if(path.node.id.type!=='Identifier'){return;}const local=path.get('id');if(isIdentifierReferenced(local)){state.refs.add(local);}},FunctionDeclaration:markFunction,FunctionExpression:markFunction,ArrowFunctionExpression:markFunction,ImportSpecifier:markImport,ImportDefaultSpecifier:markImport,ImportNamespaceSpecifier:markImport,ExportNamedDeclaration(path,state){const specifiers=path.get('specifiers');if(specifiers.length){specifiers.forEach(s=>{if(isDataIdentifier(s.node.exported.name,state)){s.remove();}});if(path.node.specifiers.length<1){path.remove();}return;}const decl=path.get('declaration');if(decl==null||decl.node==null){return;}switch(decl.node.type){case'FunctionDeclaration':{const name=decl.node.id.name;if(isDataIdentifier(name,state)){path.remove();}break;}case'VariableDeclaration':{const inner=decl.get('declarations');inner.forEach(d=>{if(d.node.id.type!=='Identifier'){return;}const name=d.node.id.name;if(isDataIdentifier(name,state)){d.remove();}});break;}default:{break;}}}}};}